#macro(contacts_content)
    <h3>Contacts</h3>
    <div>
        <button onclick="pullContacts();">List contacts</button>
        <button onclick="toggleAddContactContainer();">Add contact</button>
    </div>

    <div id="add-contact-container"></div>
    <div id="contact-list-container"></div>

    <script>
        let showAddContactContainer = localStorage["showAddContactContainer"] === "true";
        localStorage["showAddContactContainer"] = showAddContactContainer;

        $("#add-contact-container").replaceWith(generateContactItem(
                "id=\"add-contact-container\"", null, "addContact()", "Submit"
        ));
        let addContactContainer = $("#add-contact-container");
        let contactListContainer = $("#contact-list-container");

        updateAddContactContainerVisibility();

        function generateContactItem(containerAttributes, contact, onclick, buttonLabel) {
            contact = (contact === null) ? {"firstName": "", "middleNames": "", "lastName": ""} : contact;
            let isValid = validateContact(contact);
            let disabled = isValid ? "" : "disabled";
            let container = $(
                `<div ${containerAttributes}>
                    <label for="contact-first-name">First Name</label>
                    <input type="text" id="contact-first-name" class="contact-first-name" value="${contact.firstName}" />
                    <label for="contact-middle-names">Middle Names</label>
                    <input type="text" id="contact-middle-names" class="contact-middle-names" value="${contact.middleNames}" />
                    <label for="contact-last-name">Last Name</label>
                    <input type="text" id="contact-last-name" class="contact-last-name" value="${contact.lastName}" />

                    <button id="add-contact-submit" class="btn" onclick="${onclick}" ${disabled}>${buttonLabel}</button>
                </div>`
            );
            container.children("input").on("change", function() {
                let container = $(this).parent();
                container.children("button").prop("disabled", !validateContact(getContactFromContainer(container)));
            });
            return container;
        }

        function generateContactListItem(contact) {
            return generateContactItem("class=\"contact-list-item\"", contact, "updateContact()", "Update");
        }

        function getContactFromContainer(container) {
            return {
                "firstName": container.children(".contact-first-name").val(),
                "middleNames": container.children(".contact-middle-names").val(),
                "lastName": container.children(".contact-last-name").val(),
            };
        }

        function validateContact(contact) {
            let isValid = true;
            isValid &= contact["firstName"] !== "";
            return isValid;
        }

        function pullContacts() {
            runAjax("post", "/get_person_list_ranged", {"begin": 0, "amount": 100}, function() {
                let response = JSON.parse(this.response);
                contactListContainer.empty();
                console.log(response);
                // response.forEach(function(contact) {
                //     contactListContainer.append(generateContactListItem(contact));
                // })
            });
        }

        function addContact() {
            let contact = getContactFromContainer(addContactContainer);
            if (validateContact(contact)) {
                runAjax("post", "/add_contact", contact, function() {
                    let response = JSON.parse(this.response);
                    if (response["success"]) {
                        contactListContainer.append(generateContactListItem(contact));
                        console.log("Contact added");
                    } else {
                        console.log("Failed to add contact");
                    }
                });
            }
        }

        function updateContact() {

        }

        function toggleAddContactContainer() {
            showAddContactContainer = !showAddContactContainer;
            localStorage["showAddContactContainer"] = showAddContactContainer;
            updateAddContactContainerVisibility();
        }
        function updateAddContactContainerVisibility() {
            if (showAddContactContainer)
                addContactContainer.show();
            else
                addContactContainer.hide();
        }
    </script>
#end
